
ci_git_url = "https://github.com/Nordix/metal3-dev-tools.git"
ci_git_credential_id = "nordix-metal3-ci-github-prod-token"
ci_git_branch = "master"
image_registry = "registry.nordix.org"
workspace_img_ver = "v1.0"
lint_md_img_ver = "v1.0"
lint_go_img_ver = "v1.0"
image_builder_img_ver = "v1.0"


pipeline {
    agent { label 'metal3-static-workers' }
    stages {
        stage('SCM'){
            options {
              timeout(time: 5, unit: 'MINUTES')
            }
            steps {
              checkout([$class: 'GitSCM',
                      branches: [[name: ci_git_branch]],
                      doGenerateSubmoduleConfigurations: false,
                      extensions: [[$class: 'WipeWorkspace'],
                      [$class: 'CleanCheckout'],
                      [$class: 'CleanBeforeCheckout']],
                      submoduleCfg: [],
                      userRemoteConfigs: [[credentialsId: ci_git_credential_id,
                      url: ci_git_url]]])
            }
        }
        stage('Build docker images'){
            options {
              timeout(time: 30, unit: 'MINUTES')
            }
            steps {
                sh "make build-lint-md"
                sh "make build-image-builder"
                sh "make build-lint-go"
            }
        }
        stage('Push docker images'){
            options {
              timeout(time: 10, unit: 'MINUTES')
            }
            steps {
                withCredentials([usernamePassword(credentialsId: 'metal3ci_harbor', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASSWORD')])  {
                    sh "docker login '${image_registry}' -u $DOCKER_USER -p $DOCKER_PASSWORD"
                }
                sh "make push-lint-md"
                sh "make push-image-builder"
                sh "make push-lint-go"
            }
        }
    }
    post {
      cleanup {
          sh "docker logout '${image_registry}'"
      }
   }
}
